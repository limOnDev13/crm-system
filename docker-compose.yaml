services:
  postgres:
    image: postgres:13.3
    env_file:
      - .env
    ports:
      - '${POSTGRES_PORT}:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - my_network
  app:
    build: .
    expose:
      - 8000
    command: >
      sh -c "cd crm &&
             python manage.py migrate &&
             gunicorn crm.wsgi:application --bind 0.0.0.0:8000"
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - my_network
    volumes:
      - static:/crm/crm/static
      - media:/crm/crm/upload/
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      app:
        condition: service_started
        restart: true
    networks:
      - my_network
    volumes:
      - static:/crm/crm/static
      - media:/crm/crm/upload/
    links:
      - app

networks:
  my_network:
    driver: bridge

volumes:
  static:
  media:
